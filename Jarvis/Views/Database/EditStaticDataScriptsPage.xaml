<Page x:Class="Jarvis.Views.Database.EditStaticDataScriptsPage"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:Database="clr-namespace:Jarvis.ViewModels.Database"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:local="clr-namespace:Jarvis.Views.Database"
      mc:Ignorable="d" 
      d:DesignHeight="450" d:DesignWidth="800"
      Title="EditStaticDataScriptsPage"
      Background="#FFf4f6f7">

    <Page.Resources>
        <Style TargetType="Label">
            <Setter Property="Background" Value="{x:Null}"/>
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="Height" Value="30"/>
            <Setter Property="Padding" Value="4,2,0,2"/>
        </Style>
        <Style TargetType="ComboBox">
            <Setter Property="Background" Value="{x:Null}"/>
            <Setter Property="FontSize" Value="12"/>
            <Setter Property="Height" Value="25"/>
            <Style.Triggers>
                <Trigger Property="Validation.HasError" Value="true">
                    <Setter Property="ToolTip" Value="{Binding RelativeSource={x:Static RelativeSource.Self},
                        Path=(Validation.Errors)[0].ErrorContent}"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style TargetType="{x:Type Button}">
            <Setter Property="Foreground" Value="#FFd2dbe0" />
            <Setter Property="Background" Value="#FF294b6d" />
            <Setter Property="Height" Value="30" />
            <Setter Property="FontSize" Value="16" />
            <Setter Property="Margin" Value="2,2,2,2"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}" Padding="0,0,0,0" Margin="0,0,0,0">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#FF386694" />
                    <Setter Property="Foreground" Value="White" />
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <!--<Setter Property="Background" Value="#FF1c334a" />-->
                    <Setter Property="Foreground" Value="#FF546c78" />
                </Trigger>
            </Style.Triggers>
        </Style>
    </Page.Resources>
    <Page.DataContext>
        <Database:EditStaticDataScriptsViewModel/>
    </Page.DataContext>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="55"/>
            <RowDefinition Height="*"/>
            <!--<RowDefinition Height="34"/>-->
        </Grid.RowDefinitions>
        <Grid Grid.Row="0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="40*"/>
                <ColumnDefinition Width="60*"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="55*"/>
                <RowDefinition Height="45*"/>
            </Grid.RowDefinitions>
            <Label x:Name="DatabaseNameLabel" Grid.Row="0" Grid.Column="0" Content="Database Name"/>
            <ComboBox x:Name="DatabaseNameComboBox" Grid.Row="1" Grid.Column="0" Margin="2,0,2,0"
                      ItemsSource="{Binding DatabaseProjectNames}"
                      SelectedItem="{Binding CurrentDatabaseProject, ValidatesOnExceptions=True}"/>
            <Grid Grid.Row="0" Grid.Column="1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="40*"/>
                    <ColumnDefinition Width="20*"/>
                    <ColumnDefinition Width="20*"/>
                </Grid.ColumnDefinitions>
                <Label x:Name="TableNameLabel" Content="Table Name" Grid.Column="0"/>
                <StackPanel Grid.Column="2">
                    <CheckBox x:Name="StaticDataCheckBox" Content="Static Data" FlowDirection="RightToLeft" Margin="0,0,2,0"
                              HorizontalAlignment="Right" IsChecked="{Binding StaticDataEnabled}"/>
                    <CheckBox x:Name="TestDataCheckBox" Content="Test Data" FlowDirection="RightToLeft" Margin="0,0,2,0"
                              HorizontalAlignment="Right" IsChecked="{Binding TestDataEnabled}"/>
                </StackPanel>
            </Grid>
            <ComboBox x:Name="TableNameComboBox" Grid.Row="1" Grid.Column="1" Margin="2,0,2,0" ItemsSource="{Binding DataScriptNames}"
                      SelectedItem="{Binding CurrentDataScript, ValidatesOnExceptions=True}"/>
        </Grid>
        <Grid Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition>
                    <ColumnDefinition.Style>
                        <Style TargetType="ColumnDefinition">
                            <Setter Property="Width" Value="*"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding DataGridRightVisible}" Value="False">
                                    <Setter Property="Width" Value="0"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </ColumnDefinition.Style>
                </ColumnDefinition>
            </Grid.ColumnDefinitions>
            <Grid Grid.Column="0">
                <Grid.RowDefinitions>
                    <RowDefinition Height="20"/>
                    <RowDefinition Height="30"/>
                    <RowDefinition Height="20"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="34"/>
                </Grid.RowDefinitions>
                <Label x:Name="TableDataGridLeftEnvironmentLabel" Grid.Row="0" Grid.Column="0" Content="Environment"/>
                <ComboBox x:Name="TableDataGridLeftEnvironment" Grid.Row="1" Grid.Column="0" Margin="2,0,2,0"
                          ItemsSource="{Binding EnvironmentList}"
                          SelectedItem="{Binding CurrentEnvironmentLeft, ValidatesOnExceptions=True}"/>
                <Grid Grid.Row="2" Grid.Column="0">
                    <StackPanel Orientation="Horizontal">
                        <CheckBox x:Name="TableDataGridLeftDeleteWhenNotMatchedCheckBox" Content="Delete When Not Matched"
                                  FlowDirection="LeftToRight" Margin="0,0,2,0" HorizontalAlignment="Left"
                                  IsChecked="{Binding DeleteWhenNotMatchedLeft}"/>
                        <CheckBox x:Name="TableDataGridLeftPrintChangesCheckBox" Content="Print Changes"
                                  FlowDirection="LeftToRight" Margin="0,0,2,0" HorizontalAlignment="Left"
                                  IsChecked="{Binding PrintChangesLeft}"/>
                    </StackPanel>
                </Grid>
                <TabControl Grid.Row="3" Grid.Column="0" TabStripPlacement="Top">
                    <TabItem Header="Data">
                        <DataGrid x:Name="TableDataGridLeft" AutoGenerateColumns="True" CanUserAddRows="True" CanUserDeleteRows="True"
                                  CanUserResizeColumns="True" IsReadOnly="False" AlternatingRowBackground="LightBlue" AlternationCount="2"
                                  ItemsSource="{Binding DataTableLeft, Mode=TwoWay}" SelectedItem="{Binding GridSelectedRowLeft}" CurrentColumn="{Binding GridSelectedColumnLeft, Mode=TwoWay}">
                            <DataGrid.RowValidationErrorTemplate>
                                <ControlTemplate>
                                    <Grid Margin="0,-2,0,-2" ToolTip="{Binding RelativeSource={RelativeSource FindAncestor,
                                        AncestorType={x:Type DataGridRow}}, Path=(Validation.Errors)[0].ErrorContent}">
                                        <Ellipse StrokeThickness="0" Fill="Red" Width="{TemplateBinding FontSize}"
                                                 Height="{TemplateBinding FontSize}" />
                                        <TextBlock Text="!" FontSize="{TemplateBinding FontSize}" FontWeight="Bold" Foreground="White"
                                                   HorizontalAlignment="Center" />
                                    </Grid>
                                </ControlTemplate>
                            </DataGrid.RowValidationErrorTemplate>
                            <DataGrid.ContextMenu>
                                <ContextMenu>
                                    <MenuItem Header="Click Me" Click="MenuItem_Click" />
                                </ContextMenu>
                            </DataGrid.ContextMenu>
                        </DataGrid>
                    </TabItem>
                    <TabItem Header="Errors">
                        <TextBox x:Name="ErrorsLeft" Text="{Binding ErrorsLeft}" TextWrapping="Wrap" IsReadOnly="True"/>
                    </TabItem>
                </TabControl>
                <Grid Grid.Row="4" Grid.Column="0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="60*"/>
                        <ColumnDefinition Width="40*"/>
                    </Grid.ColumnDefinitions>
                    <Button x:Name="SaveLeftButton" Grid.Column="0" Content="Save" Command="{Binding SaveLeft}"/>
                    <Button x:Name="ResetLeftButton" Grid.Column="1" Content="Reset" Command="{Binding ResetLeft}"/>
                </Grid>
            </Grid>
            <Grid Grid.Column="1">
                <Grid.RowDefinitions>
                    <RowDefinition Height="20"/>
                    <RowDefinition Height="30"/>
                    <RowDefinition Height="20"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="34"/>
                </Grid.RowDefinitions>
                <Label x:Name="TableDataGridRightEnvironmentLabel" Grid.Row="0" Grid.Column="1" Content="Environment"/>
                <ComboBox x:Name="TableDataGridRightEnvironment" Grid.Row="1" Grid.Column="1" Margin="2,0,2,0"
                          ItemsSource="{Binding EnvironmentList}"
                          SelectedItem="{Binding CurrentEnvironmentRight, ValidatesOnExceptions=True}"/>
                <Grid Grid.Row="2" Grid.Column="1">
                    <StackPanel Orientation="Horizontal">
                        <CheckBox x:Name="TableDataGridRightDeleteWhenNotMatchedCheckBox" Content="Delete When Not Matched"
                                  FlowDirection="LeftToRight" Margin="0,0,2,0" HorizontalAlignment="Left"
                                  IsChecked="{Binding DeleteWhenNotMatchedRight}"/>
                        <CheckBox x:Name="TableDataGridRightPrintChangesCheckBox" Content="Print Changes"
                                  FlowDirection="LeftToRight" Margin="0,0,2,0" HorizontalAlignment="Left"
                                  IsChecked="{Binding PrintChangesRight}"/>
                    </StackPanel>
                </Grid>
                <TabControl Grid.Row="3" Grid.Column="1" TabStripPlacement="Top">
                    <TabItem Header="Data">
                        <DataGrid x:Name="TableDataGridRight" AutoGenerateColumns="True" CanUserAddRows="True" CanUserDeleteRows="True"
                                  CanUserResizeColumns="True" IsReadOnly="False" AlternatingRowBackground="LightBlue" AlternationCount="2"
                                  ItemsSource="{Binding DataTableRight, Mode=TwoWay}" SelectedItem="{Binding GridSelectedRowRight, Mode=TwoWay}">
                            <DataGrid.RowValidationErrorTemplate>
                                <ControlTemplate>
                                    <Grid Margin="0,-2,0,-2" ToolTip="{Binding RelativeSource={RelativeSource FindAncestor,
                                        AncestorType={x:Type DataGridRow}}, Path=(Validation.Errors)[0].ErrorContent}">
                                        <Ellipse StrokeThickness="0" Fill="Red" Width="{TemplateBinding FontSize}"
                                                 Height="{TemplateBinding FontSize}" />
                                        <TextBlock Text="!" FontSize="{TemplateBinding FontSize}" FontWeight="Bold" Foreground="White"
                                                   HorizontalAlignment="Center" />
                                    </Grid>
                                </ControlTemplate>
                            </DataGrid.RowValidationErrorTemplate>
                        </DataGrid>
                    </TabItem>
                    <TabItem Header="Errors">
                        <TextBox x:Name="ErrorsRight" Text="{Binding ErrorsRight}" TextWrapping="Wrap" IsReadOnly="True"/>
                    </TabItem>
                </TabControl>
                <Grid Grid.Row="4" Grid.Column="1">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="60*"/>
                        <ColumnDefinition Width="40*"/>
                    </Grid.ColumnDefinitions>
                    <Button x:Name="SaveRightButton" Grid.Column="0" Content="Save" Command="{Binding SaveRight}"/>
                    <Button x:Name="ResetRightButton" Grid.Column="1" Content="Reset" Command="{Binding ResetRight}"/>
                </Grid>
            </Grid>
        </Grid>
        <!--<Grid Grid.Row="2">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="60*"/>
                <ColumnDefinition Width="40*"/>
            </Grid.ColumnDefinitions>
            <Button x:Name="SaveButton" Grid.Column="0" Content="Save" Command="{Binding Save}"/>
            <Button x:Name="ResetButton" Grid.Column="1" Content="Reset" Click="ResetButton_Click"/>
        </Grid>-->
    </Grid>
</Page>